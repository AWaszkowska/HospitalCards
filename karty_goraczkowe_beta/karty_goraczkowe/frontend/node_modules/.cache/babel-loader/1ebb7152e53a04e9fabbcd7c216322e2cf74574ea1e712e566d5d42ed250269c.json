{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48668\\\\Desktop\\\\karty_goraczkowe_beta\\\\karty_goraczkowe\\\\frontend\\\\src\\\\AllPatients.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Container, Form, Table } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// create func fetchpatiensts, then use useEffect to call it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPatients = () => {\n  _s();\n  const [patients, setPatients] = useState([]); // patients is a state variable, setPatients is a func which updates it\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = () => {\n    axios.get('http://127.0.0.1:8000/api/patients/') // get req returns a promise\n    .then(res => {\n      //inside the then block we log our response\n      console.log(res);\n      setPatients(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Birth Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pesel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patients.map(patients => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.birth_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.pesel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.creation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patients.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPatients, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Container","Form","Table","AllPatients","patients","setPatients","fetchPatients","get","then","res","console","log","data","catch","err","map","id","name","surname","birth_date","pesel","creation_date","gender"],"sources":["C:/Users/48668/Desktop/karty_goraczkowe_beta/karty_goraczkowe/frontend/src/AllPatients.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Container, Form, Table} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// create func fetchpatiensts, then use useEffect to call it\r\nconst AllPatients = () => {\r\n  const [patients, setPatients] = useState([]); // patients is a state variable, setPatients is a func which updates it\r\nuseEffect(() => {\r\n  fetchPatients();\r\n}, []);\r\nconst fetchPatients = () => {\r\n  axios\r\n   .get('http://127.0.0.1:8000/api/patients/')  // get req returns a promise\r\n   .then((res) => {      //inside the then block we log our response\r\n    console.log(res);\r\n    setPatients(res.data);\r\n   })\r\n   .catch((err) => {\r\n    console.log(err);\r\n   });\r\n};\r\n  return(\r\n\r\n    <div>\r\n      <h1>All Patients</h1>\r\n      <div className='patient-container'>\r\n          <table class='table'>\r\n            <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Name</th>\r\n              <th>Surname</th>\r\n              <th>Birth Date</th>\r\n              <th>Pesel</th>\r\n              <th>Creation Date</th>\r\n              <th>Gender</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n              {patients.map(patients =>\r\n                <tr>\r\n                  <td>{patients.id}</td>\r\n                  <td>{patients.name}</td>\r\n                  <td>{patients.surname}</td>\r\n                  <td>{patients.birth_date}</td>\r\n                  <td>{patients.pesel}</td>\r\n                  <td>{patients.creation_date}</td>\r\n                  <td>{patients.gender}</td>\r\n                </tr>\r\n              )}\r\n            </tbody> \r\n          </table>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AllPatients;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,QAAO,iBAAiB;AAC9D,OAAO,sCAAsC;AAC7C;AAAA;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChDC,SAAS,CAAC,MAAM;IACdS,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,aAAa,GAAG,MAAM;IAC1BR,KAAK,CACHS,GAAG,CAAC,qCAAqC,CAAC,CAAE;IAAA,CAC5CC,IAAI,CAAEC,GAAG,IAAK;MAAO;MACrBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBJ,WAAW,CAACI,GAAG,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACfJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IACjB,CAAC,CAAC;EACL,CAAC;EACC,oBAEE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAC9B;QAAO,KAAK,EAAC,OAAO;QAAA,wBAClB;UAAA,uBACA;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAY,eACZ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAa,eACb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB,eAChB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAmB,eACnB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc,eACd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAsB,eACtB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe;UAAA;YAAA;YAAA;YAAA;UAAA;QACZ;UAAA;UAAA;UAAA;QAAA,QACG,eACR;UAAA,UACGV,QAAQ,CAACW,GAAG,CAACX,QAAQ,iBACpB;YAAA,wBACE;cAAA,UAAKA,QAAQ,CAACY;YAAE;cAAA;cAAA;cAAA;YAAA,QAAM,eACtB;cAAA,UAAKZ,QAAQ,CAACa;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACxB;cAAA,UAAKb,QAAQ,CAACc;YAAO;cAAA;cAAA;cAAA;YAAA,QAAM,eAC3B;cAAA,UAAKd,QAAQ,CAACe;YAAU;cAAA;cAAA;cAAA;YAAA,QAAM,eAC9B;cAAA,UAAKf,QAAQ,CAACgB;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eACzB;cAAA,UAAKhB,QAAQ,CAACiB;YAAa;cAAA;cAAA;cAAA;YAAA,QAAM,eACjC;cAAA,UAAKjB,QAAQ,CAACkB;YAAM;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QACvB;QACN;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAGV,CAAC;AAAC,GAnDInB,WAAW;AAAA,KAAXA,WAAW;AAqDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}