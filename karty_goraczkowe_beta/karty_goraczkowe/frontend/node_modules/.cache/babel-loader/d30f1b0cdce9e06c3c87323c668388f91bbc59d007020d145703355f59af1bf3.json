{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\48668\\\\Desktop\\\\karty_goraczkowe_beta\\\\karty_goraczkowe\\\\frontend\\\\src\\\\AllPatients.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// create func fetchpatiensts, then use useEffect to call it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPatients = () => {\n  _s();\n  const [patients, setPatients] = useState([]); // patients is a state variable, setPatients is a func which updates it\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = () => {\n    axios.get('http://127.0.0.1:8000/api/patients/') // get req returns a promise\n    .then(res => {\n      //inside the then block we log our response\n      console.log(res);\n      setPatients(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h1>All Patients</h1>\n    //   <div className='patient-container'>\n    //     {patients.map((patients) => (\n    //       <div className='card'>\n    //         <p>{patients.name}</p>\n    //         <p>{patients.surname}</p>\n    //       </div>\n    //     ))}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Patients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Birth Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pesel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patients.map(patients => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: patients.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patients.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patients.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patients.birth_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patients.pesel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(AllPatients, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useState","useEffect","axios","AllPatients","patients","setPatients","fetchPatients","get","then","res","console","log","data","catch","err","map","id","name","surname","birth_date","pesel"],"sources":["C:/Users/48668/Desktop/karty_goraczkowe_beta/karty_goraczkowe/frontend/src/AllPatients.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// create func fetchpatiensts, then use useEffect to call it\r\nconst AllPatients = () => {\r\n  const [patients, setPatients] = useState([]); // patients is a state variable, setPatients is a func which updates it\r\nuseEffect(() => {\r\n  fetchPatients();\r\n}, []);\r\nconst fetchPatients = () => {\r\n  axios\r\n   .get('http://127.0.0.1:8000/api/patients/')  // get req returns a promise\r\n   .then((res) => {      //inside the then block we log our response\r\n    console.log(res);\r\n    setPatients(res.data);\r\n   })\r\n   .catch((err) => {\r\n    console.log(err);\r\n   });\r\n};\r\n  return(\r\n    // <div>\r\n    //   <h1>All Patients</h1>\r\n    //   <div className='patient-container'>\r\n    //     {patients.map((patients) => (\r\n    //       <div className='card'>\r\n    //         <p>{patients.name}</p>\r\n    //         <p>{patients.surname}</p>\r\n    //       </div>\r\n    //     ))}\r\n    //   </div>\r\n    // </div>\r\n    <div>\r\n      <h1>All Patients</h1>\r\n      <div className='patient-container'>\r\n          <table class='table'>\r\n            <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Name</th>\r\n              <th>Surname</th>\r\n              <th>Birth Date</th>\r\n              <th>Pesel</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n              {patients.map(patients =>\r\n                <tr>\r\n                  <td>{patients.id}</td>\r\n                  <td>{patients.name}</td>\r\n                  <td>{patients.surname}</td>\r\n                  <td>{patients.birth_date}</td>\r\n                  <td>{patients.pesel}</td>\r\n                </tr>\r\n              )}\r\n            </tbody> \r\n          </table>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AllPatients;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChDC,SAAS,CAAC,MAAM;IACdK,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,aAAa,GAAG,MAAM;IAC1BJ,KAAK,CACHK,GAAG,CAAC,qCAAqC,CAAC,CAAE;IAAA,CAC5CC,IAAI,CAAEC,GAAG,IAAK;MAAO;MACrBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBJ,WAAW,CAACI,GAAG,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACfJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IACjB,CAAC,CAAC;EACL,CAAC;EACC;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QAAK,SAAS,EAAC,mBAAmB;QAAA,uBAC9B;UAAO,KAAK,EAAC,OAAO;UAAA,wBAClB;YAAA,uBACA;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eACZ;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACb;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAgB,eAChB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAmB,eACnB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAc;YAAA;cAAA;cAAA;cAAA;YAAA;UACX;YAAA;YAAA;YAAA;UAAA,QACG,eACR;YAAA,UACGV,QAAQ,CAACW,GAAG,CAACX,QAAQ,iBACpB;cAAA,wBACE;gBAAA,UAAKA,QAAQ,CAACY;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACtB;gBAAA,UAAKZ,QAAQ,CAACa;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACxB;gBAAA,UAAKb,QAAQ,CAACc;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAC3B;gBAAA,UAAKd,QAAQ,CAACe;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAC9B;gBAAA,UAAKf,QAAQ,CAACgB;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QACtB;UACN;YAAA;YAAA;YAAA;UAAA,QACK;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAGV,CAAC;AAAC,GAzDIjB,WAAW;AAAA,KAAXA,WAAW;AA2DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}